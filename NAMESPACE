# Generated by roxygen2: do not edit by hand

S3method("$",dataset)
S3method("[",dataset)
S3method("[[",dataset)
S3method(as_dataset,data.frame)
S3method(describe,dataset)
S3method(head,dataset)
S3method(is.datacite,datacite)
S3method(is.dublincore,dublincore)
S3method(print,dataset)
S3method(set_var_labels,dataset)
S3method(summary,dataset)
S3method(tail,dataset)
S3method(var_labels,dataset)
S3method(xsd_convert,Date)
S3method(xsd_convert,POSIXct)
S3method(xsd_convert,boolean)
S3method(xsd_convert,character)
S3method(xsd_convert,data.frame)
S3method(xsd_convert,dataset)
S3method(xsd_convert,factor)
S3method(xsd_convert,integer)
S3method(xsd_convert,numeric)
S3method(xsd_convert,tibble)
export("creator<-")
export("dataset_title<-")
export("description<-")
export("geolocation<-")
export("identifier<-")
export("language<-")
export("provenance<-")
export("publication_year<-")
export("publisher<-")
export("rights<-")
export("size<-")
export("subject<-")
export("version<-")
export(DataStructure)
export(DataStructure_update)
export(as_datacite)
export(as_dataset)
export(as_dublincore)
export(creator)
export(datacite)
export(dataset)
export(dataset_bibentry)
export(dataset_download)
export(dataset_title)
export(dataset_to_triples)
export(dataset_ttl_write)
export(datasource_get)
export(datasource_set)
export(describe)
export(description)
export(dublincore)
export(geolocation)
export(get_prefix)
export(get_resource_identifier)
export(id_to_column)
export(identifier)
export(is.dataset)
export(language)
export(provenance)
export(publication_year)
export(publisher)
export(related_item)
export(rights)
export(set_var_labels)
export(size)
export(subject)
export(subject_create)
export(var_labels)
export(version)
export(xsd_convert)
importFrom(assertthat,assert_that)
importFrom(stats,setNames)
importFrom(utils,bibentry)
importFrom(utils,citation)
importFrom(utils,data)
importFrom(utils,download.file)
importFrom(utils,head)
importFrom(utils,object.size)
importFrom(utils,person)
importFrom(utils,read.csv)
importFrom(utils,tail)
